xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
10:30 My #AsyncTesting talk at #ThatConference is starting! Slides and demos: http://t.co/9PVQtAfpSr
10:40 The task returned by an async method represents that method's execution. The test tests that task. #AsyncTesting #ThatConference
10:45 Don't skip the red part of the red/green/refactor cycle! Red tests your tests. #AsyncTesting #ThatConference
10:50 Make your unit test methods async Task, not async void. #AsyncTesting #ThatConference
11:00 Many assertion libraries (today) need some help when testing failure conditions asynchronously. #AsyncTesting #ThatConference
11:05 Assertion libraries need to evaluate all delegates when adding async support. Never do sync-over-async! #AsyncTesting #ThatConference
11:10 Mocking libraries should *never* return null tasks. (Most of them get this right :) #AsyncTesting #ThatConference
11:15 Testing ViewModels and other UI code may require a special context. #AsyncTesting #ThatConference
11:25 Need to test timeouts? Mock with Rx's TestScheduler! #AsyncTesting #ThatConference